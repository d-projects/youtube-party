<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <title>Watch</title>
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <a class="navbar-brand" href="/">Youtube Synced</a>
      
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav ml-auto">
            <li class="nav-item">
              <a class="nav-link" href="/">Log In</a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/">Sign Up</a>
            </li>
          </ul>
   
        </div>
      </nav>

      <!-- <div class = "flex-container"> -->

            <div class = "iframe-api">
                <script src="https://www.youtube.com/iframe_api"></script>
            </div>

            <div id = "video-container">
                Loading...
            </div>

        <div class = "right-container">
            <div class = "alert alert-success sessionID">
                <h6>Session ID (share this) </h6>
                <h4> 453245tgtsd789 <h5>
            </div>
            <div class = "alert alert-secondary chat-container">
                <strong><p id="message"></p></strong>
                <div class = "chat"></div>
            </div>
                <form id = "msgForm">
                    <div class="form-row">
                        <div class="col-9">
                            <input type="text" class="form-control form-control-md" name="chatInput">
                        </div>
                        <div class="col-3 ">
                            <button type = "submit" class = "btn btn-secondary">Send</button>
                        </div>
                      </div>
                </form>  

        </div>

      <!-- </div> -->
    <div class = "container">

            <div class="form-row">
                <div class="col-3 ">
                    <button type = "button" class = "btn btn-secondary control">Take Control</button>
                </div>
                <div class="col-3 ">
                    <button type = "button" class = "btn btn-secondary sync">Sync Up</button>
                </div>
            </div>
      </div>


      <script>
          // 2. This code loads the IFrame Player API code asynchronously.


// 3. This function creates an <iframe> (and YouTube player)
//    after the API code downloads.
let player;
function onYouTubeIframeAPIReady() {

    fetch('videoID', {
        credentials: 'include'
    })
    .then( response => {
        return response.json();
    })
    .then( data => {
        const videoID = data;
        console.log('yay')
        player = new YT.Player('video-container', {
            height: '600',
            width: '1000',
            videoId: videoID,
            // playerVars: {
            //     controls: 0,
            //     disablekb: 1,
            //     rel : 0,
            //     fs : 0,
            // },
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange
            }
        })
        
        setTimeout( () => {
            syncUp();
        }, 1000);

        document.querySelector('iframe').classList.add('.responsive-iframe');

    })
    .catch( err => {
        console.log(err);
    });


    const tag = document.createElement('script')
    tag.src = "/js/chat.js";
    tag.type = 'text/javascript'
    var scriptLoc = document.querySelector('.chat-script');
    scriptLoc.appendChild(tag);

    
}

// 4. The API will call this function when the video player is ready.
function onPlayerReady(event) {
    //syncUp()
}

// 5. The API calls this function when the player's state changes.
//    The function indicates that when playing a video (state=1),
//    the player should play for six seconds and then stop.
let done = false;
let previous_state = 0;
let current_state = 0;
function onPlayerStateChange(event) {

    updateState(event);
}
function stopVideo() {
    player.stopVideo();
}
      </script>

<div class = "chat-script">

  </div>
<script src="/socket.io/socket.io.js" ></script>




    <!-- <script>
        const videoWidth = (document.body.clientWidth)*4/5;
        document.querySelector('.video').setAttribute('width', videoWidth);
        document.querySelector('.video').setAttribute('height', videoWidth/2);
    </script> -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js" integrity="sha384-B4gt1jrGC7Jh4AgTPSdUtOBvfO8shuf57BaghqFfPlYxofvL8/KUEfYiJOMMV+rV" crossorigin="anonymous"></script>
  

    
</body>
</html>